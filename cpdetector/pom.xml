<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.sourceforge.cpdetector</groupId>
  <artifactId>cpdetector</artifactId>
  <version>1.04</version>
  <name>cpdetector - a framework for configurable code page-detection of documents</name>
  <description> The name cpdetector is a short form for code page - detector and has nothing to do
    with java classpaths.  cpdetector is a framework for configurable code page-detection of  
    documents. It may be used to detect the code page of documents retrieved from remote hosts.
    Code page - detection is needed whenever it is not known, which encoding a document belongs to.
    Therefore it is a core requirement for any application in the field of information mining or
    just information retrieval.
    
    Maven2 packaging for JArgs is provided by ObjectLedge project. SVN code repository containing 
    this POM descriptor is hosted at http://objectledge.org/svn/external/ and project artifacts are 
    deployed to Nexus repository at http://dist.objectledge.org/m2/
  </description>
  <url>http://cpdetector.sourceforge.net/</url>
  <inceptionYear>2004</inceptionYear>
  <developers>
    <developer>
      <name>Achim Westermann</name>
      <id>achimwestermann</id>
      <email>achimwestermann at users dot sourceforge dot net</email>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>MPL</name>
      <url>http://cpdetector.cvs.sourceforge.net/viewvc/*checkout*/cpdetector/cpdetector/MPL-1.1.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:cvs:pserver:anonymous@cpdetector.cvs.sourceforge.net:/cvsroot/cpdetector</connection>
  </scm>
  <issueManagement>
    <system>SourceForge</system>
    <url>http://sourceforge.net/tracker/?group_id=114421</url>
  </issueManagement>
  <dependencies>
    <dependency>
      <groupId>net.sourceforge.jargs</groupId>
      <artifactId>jargs</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.jchardet</groupId>
      <artifactId>jchardet</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>2.7.2</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.c2.fit</groupId>
      <artifactId>fit</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>src</sourceDirectory>
    <!-- 
    <testSourceDirectory>src</testSourceDirectory>
     -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <excludes>
            <exclude>cpdetector/test/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>cpdetector/test/JunitLargeCollectionTest.java</exclude>
          </excludes>
          <systemProperties>
            <property>
              <name>extensions</name>
              <value>html,htm,xml,dtd</value>
            </property>
            <property>
              <name>iterations</name>
              <value>1</value>
            </property>
          </systemProperties>
        </configuration>
        <executions>
          <!--
            the following test executions were commented out because they all fail, each with
            different kind of error when executed for the combination of codebase 1.04 (that I
            needed) and testdocuments 1.03 (latest published)
          -->
          <!--
            <execution> <id>test.collection.xml</id> <phase>test</phase> <goals> <goal>test</goal>
            </goals> <configuration> <test>cpdetector/test/JunitLargeCollectionTest.java</test>
            <systemProperties> <property> <name>collectionRoot</name>
            <value>../cpdetector-testdocuments/xmlts20031210/xmlconf/japanese/</value> </property>
            </systemProperties> </configuration> </execution>
          -->
          <!--
            <execution> <id>test.collection.multilingual</id> <phase>test</phase> <goals>
            <goal>test</goal> </goals> <configuration>
            <test>cpdetector/test/JunitLargeCollectionTest.java</test> <systemProperties> <property>
            <name>collectionRoot</name> <value>../cpdetector-testdocuments/www.unhchr.ch/</value>
            </property> </systemProperties> </configuration> </execution>
          -->
          <!--
            <execution> <id>test.collection.xml.chinese</id> <phase>test</phase> <goals>
            <goal>test</goal> </goals> <configuration>
            <test>cpdetector/test/JunitLargeCollectionTest.java</test> <systemProperties> <property>
            <name>collectionRoot</name> <value>../cpdetector-testdocuments/xml.ascc.net/</value>
            </property> </systemProperties> </configuration> </execution>
          -->
        </executions>
      </plugin>
    </plugins>
  </build>
  <distributionManagement>
    <repository>
      <id>nexus.objectledge.org</id>
      <name>ObjectLedge Nexus repository</name>
      <url>http://nexus.objectledge.org/nexus/content/repositories/m2thirdparty</url>
    </repository>
  </distributionManagement>
</project>